---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
certificateKey: {{ certificate_key.stdout }}
nodeRegistration:
{% if kubeadm_cri_type == "containerd" %}
  criSocket: unix:///run/containerd/containerd.sock
{% elif kubeadm_cri_type == "docker" %}
  criSocket: /var/run/dockershim.sock
{% endif %}
  kubeletExtraArgs:
    cloud-provider: "external"
skipPhases:
  - addon/kube-proxy
localAPIEndpoint:
  advertiseAddress: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: "{{ kubeadm_version_kubernetes }}"
controlPlaneEndpoint: "{{ kubeadm_control_plane_endpoint }}:6443"
clusterName: {{ kubeadm_cluster_name }}
networking:
  dnsDomain: "{{ kubeadm_dns_domain }}.local"
  podSubnet: "{{ kubeadm_pod_network_cidr }}"
  serviceSubnet: "{{ kubeadm_service_cidr }}"
apiServer:
  extraArgs:
{% if kubeadm_openstack_cloud_controller_manager %}
    cloud-provider: "external"
{% endif %}
    bind-address: "{{ kubeadm_api_server_bind_address }}"
controllerManager:
{% if kubeadm_openstack_cloud_controller_manager %}
  extraArgs:
    cloud-provider: "external"
{% endif %}
---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
cgroupDriver: "{{ kubeadm_cri_cgroup_driver }}"
